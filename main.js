!function(){"use strict";class e{constructor(e,t,r,s,i){let{name:a,link:o,_id:n,isLiked:l}=e;this.name=a,this.link=o,this.id=n,this.isLiked=l,this._cardSelector=t,this._handleImagePreview=r,this._deleteCardModal=s,this._handleCardLike=i}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._deleteCard.addEventListener("click",(()=>this._deleteCardModal(this.id,this))),this._likeButton.addEventListener("click",(()=>{this._handleCardLike(this)})),this._cardImage.addEventListener("click",(()=>{this._handleImagePreview(this)}))}handleDeleteCard=()=>{this._cardElement.remove(),this._cardElement=null};updateLike(e){e?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active"),this.isLiked=e}getview(){return this._cardElement=this._getTemplate(),this._cardElement.querySelector(".card__title").textContent=this.name,this._likeButton=this._cardElement.querySelector(".card__like-button"),this.isLiked&&this._likeButton.classList.toggle("card__like-button_active"),this._cardImage=this._cardElement.querySelector(".card__image"),this._deleteCard=this._cardElement.querySelector(".card__remove-button"),this._cardImage.src=this.link,this._cardImage.alt=this.name,this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}resetValidation(){this._toggleButtonState()}_toggleButtonState(){if(this._hasInvalidInput())return this._submitButton.classList.add(this._inactiveButtonClass),void(this._submitButton.disabled=!0);this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners(),this._toggleButtonState()}}class r{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close"))&&this.close()}))}}var s=class extends r{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._button=this._popupForm.querySelector(".modal__button")}_getInputValues(){const e=Array.from(this._popupForm.querySelectorAll(".modal__input")),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues(),this._button)}))}};const i=document.querySelector(".profile__edit-button"),a=document.querySelector("#profile-edit-modal"),o=document.querySelector("#avatar-edit-modal"),n=document.querySelector("#add-card-modal"),l=(a.querySelector("#modal-close"),n.querySelector("#modal-close"),document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#profile-title-name")),d=document.querySelector("#profile-description-input"),c=document.querySelector(".profile__add-button"),h=a.querySelector("#modal-form"),u=o.querySelector("#modal-form"),m=n.querySelector("#modal-form"),_=(m.querySelector("#card-title-input"),m.querySelector("#card-url-input"),document.querySelector(".cards__list"),document.querySelector(".cards__list"),document.querySelector("#card-template").content.firstElementChild,document.querySelector("#preview-image-modal")),p=(_.querySelector(".modal__img"),_.querySelector(".modal__caption"),_.querySelector("#modal-close"),"#card-template"),v={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},E=new class{constructor(e,t){let{renderer:r,items:s}=e;this._renderer=r,this._items=s,this._container=document.querySelector(t)}renderItems(e){e.forEach((e=>this._renderer(e)))}addItem(e){this._container.prepend(e)}}({renderer:e=>{const t=q(e);E.addItem(t)}},".cards__list"),f=new s("#add-card-modal",(function(e,t){L(!0,t),k.addCard({name:e.title,link:e.url}).then((e=>{E.addItem(q(e)),f.close(),m.reset(),U.resetValidation()})).catch((e=>{console.error("Error adding card:",e),alert("Failed to add the card. Please try again.")})).finally((()=>{L(!1,t)}))})),S=new s("#avatar-edit-modal",(function(e,t){L(!0,t),k.updateUserAvatar({avatar:e.avatar}).then((e=>{b.updateAvatarImage({avatar:e.avatar}),S.close(),w.resetValidation(),u.reset()})).catch((e=>{console.error("Error updating avatar:",e),alert("Failed to change avatar image. Please try again.")})).finally((()=>{L(!1,t)}))})),g=new s("#profile-edit-modal",(function(e,t){L(!0,t),k.updateUserInfo({name:e.name,about:e.description}).then((()=>{b.setUserInfo(e),g.close(),h.reset()})).catch((e=>{console.error("Error updating profile:",e),alert("Failed to update profile. Please try again.")})).finally((()=>{L(!1,t)}))}));f.setEventListeners(),g.setEventListeners(),S.setEventListeners();const y=new class extends r{constructor(e){super({popupSelector:e}),this._image=this._popupElement.querySelector(".modal__img"),this._caption=this._popupElement.querySelector(".modal__caption")}open(e){let{link:t,name:r}=e;this._image.src=t,this._image.alt=r,this._caption.textContent=r,super.open()}}("#preview-image-modal");y.setEventListeners();const b=new class{constructor(e){let{profileName:t,jobElement:r,avatarImage:s}=e;this._profileName=document.querySelector(t),this._jobElement=document.querySelector(r),this._avatarImage=document.querySelector(s)}getUserInfo(){return{title:this._profileName.textContent,description:this._jobElement.textContent}}setUserInfo(e){this._profileName.textContent=e.name,this._jobElement.textContent=e.description}updateAvatarImage(e){e.avatar&&(this._avatarImage.src=e.avatar)}}({profileName:".profile__title",jobElement:".profile__description",avatarImage:".profile__image"}),C=new class extends r{constructor(e){super({popupSelector:e}),this._deleteCardModal=this._popupElement,this._formElement=this._deleteCardModal.querySelector(".modal__form")}setSubmitFunction(e){this._submitFunction=e}setEventListeners(){this._formElement.addEventListener("submit",(e=>{e.preventDefault(),this._submitFunction&&this._submitFunction()})),super.setEventListeners()}}("#delete-image-modal");C.setEventListeners();const k=new class{constructor(e){this.baseUrl=e.baseUrl,this.headers=e.headers}getInitialCards(){return fetch(`${this.baseUrl}/cards`,{method:"GET",headers:this.headers}).then((e=>this.checkResponse(e)))}getUserInfo(){return fetch(`${this.baseUrl}/users/me`,{method:"GET",headers:this.headers}).then((e=>this.checkResponse(e)))}updateUserInfo(e){return fetch(`${this.baseUrl}/users/me`,{method:"PATCH",headers:this.headers,body:JSON.stringify(e)}).then((e=>this.checkResponse(e)))}updateUserAvatar(e){return fetch(`${this.baseUrl}/users/me/avatar`,{method:"PATCH",headers:this.headers,body:JSON.stringify(e)}).then((e=>this.checkResponse(e)))}addCard(e){return fetch(`${this.baseUrl}/cards`,{method:"POST",headers:this.headers,body:JSON.stringify(e)}).then((e=>this.checkResponse(e)))}handleDeleteCard(e){return fetch(`${this.baseUrl}/cards/${e}`,{method:"DELETE",headers:this.headers}).then((e=>this.checkResponse(e)))}likeCard(e){return fetch(`${this.baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this.headers}).then((e=>this.checkResponse(e)))}dislikeCard(e){return fetch(`${this.baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this.headers}).then((e=>this.checkResponse(e)))}getUserInfoAndCards(){return Promise.all([this.getUserInfo(),this.getInitialCards()]).then((e=>{let[t,r]=e;return{userInfo:t,cards:r}}))}checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"c801e776-9008-430b-a7ca-bcf7d2aaaf7f","Content-Type":"application/json"}});function L(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save";t.textContent=e?"Saving...":r}function q(t){return new e(t,p,B,((e,t)=>{!function(e,t){C.setSubmitFunction((()=>{k.handleDeleteCard(e).then((()=>{t.handleDeleteCard(),C.close()})).catch((e=>console.error("Error deleting card:",e)))})),C.open()}(e,t)}),((e,t)=>{!function(e){e.isLiked?k.dislikeCard(e.id).then((t=>{e.updateLike(!1),console.log(t)})).catch((e=>console.error("Error removing like from card:",e))):k.likeCard(e.id).then((t=>{console.log(t),e.updateLike(!0)})).catch((e=>console.error("Error adding like to card:",e)))}(e)})).getview()}k.getUserInfoAndCards().then((e=>{let{userInfo:t,cards:r}=e;b.setUserInfo({name:t.name,description:t.about}),b.updateAvatarImage({avatar:t.avatar}),E.renderItems(r)})).catch((e=>{console.error("Failed to load user information or cards:",e),alert("Unable to load user data or cards. Please try again later.")})),document.querySelector(".profile__edit-avatar-button").addEventListener("click",(()=>{S.open()}));const I=new t(v,h),U=new t(v,m),w=new t(v,u);function B(e){y.open(e)}I.enableValidation(),U.enableValidation(),w.enableValidation(),i.addEventListener("click",(()=>{const e=b.getUserInfo();l.value=e.title,d.value=e.description,g.open()})),c.addEventListener("click",(()=>{f.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,