!function(){"use strict";class e{constructor(e,t,r,s,o){let{name:a,link:n,_id:i,isLiked:l}=e;this.name=a,this.link=n,this._id=i,this._isLiked=l,this._cardSelector=t,this._handleImagePreview=r,this._deleteCardModal=s,this._handleCardLike=o}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._deleteCard.addEventListener("click",(()=>this._deleteCardModal(this._id,this))),this._likeButton.addEventListener("click",(()=>{this._handleCardLike(this)})),this._cardImage.addEventListener("click",(()=>{this._handleImagePreview(this)}))}_handleDeleteCard=()=>{this._cardElement.remove(),this._cardElement=null};updateLike(e){e?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active"),this._isLiked=e}getview(){return this._cardElement=this._getTemplate(),this._cardElement.querySelector(".card__title").textContent=this.name,this._likeButton=this._cardElement.querySelector(".card__like-button"),this._isLiked&&this._likeButton.classList.toggle("card__like-button_active"),this._cardImage=this._cardElement.querySelector(".card__image"),this._deleteCard=this._cardElement.querySelector(".card__remove-button"),this._cardImage.src=this.link,this._cardImage.alt=this.name,this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}resetValidation(){this._toggleButtonState()}_toggleButtonState(){if(this._hasInvalidInput())return this._submitButton.classList.add(this._inactiveButtonClass),void(this._submitButton.disabled=!0);this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class r{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close"))&&this.close()}))}}var s=class extends r{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._button=this._popupForm.querySelector(".modal__button")}_getInputValues(){const e=Array.from(this._popupForm.querySelectorAll(".modal__input")),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()}))}};const o=document.querySelector(".profile__edit-button"),a=document.querySelector("#profile-edit-modal"),n=document.querySelector("#add-card-modal"),i=(a.querySelector("#modal-close"),n.querySelector("#modal-close"),document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#profile-title-name")),l=document.querySelector("#profile-description-input"),c=document.querySelector(".profile__add-button"),d=a.querySelector("#modal-form"),u=n.querySelector("#modal-form"),h=(u.querySelector("#card-title-input"),u.querySelector("#card-url-input"),document.querySelector(".cards__list"),document.querySelector(".cards__list"),document.querySelector("#card-template").content.firstElementChild,document.querySelector("#preview-image-modal")),_=(h.querySelector(".modal__img"),h.querySelector(".modal__caption"),h.querySelector("#modal-close"),"#card-template"),m={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};console.log([{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}]),console.log(o);const p=new class{constructor(e,t){let{renderer:r,items:s}=e;this._renderer=r,this._items=s,this._container=document.querySelector(t)}renderItems(e){e.forEach((e=>this._renderer(e)))}addItem(e){this._container.prepend(e)}}({renderer:e=>{const t=q(e);p.addItem(t)}},".cards__list"),f=new s("#add-card-modal",(function(e){const t=document.querySelector(".modal__button");L(!0,t),y.addCard({name:e.title,link:e.url}).then((e=>{p.addItem(q(e)),f.close(),u.reset(),I.resetValidation()})).catch((e=>console.error("Error adding card:",e))).finally((()=>{L(!1,t)}))}));f.setEventListeners();const v=new s("#profile-edit-modal",(function(e){const t=document.querySelector(".modal__button");L(!0,t),y.updateUserInfo({name:e.name,about:e.description}).then((()=>{g.setUserInfo(e),g.updateAvatarImage(e)})).finally((()=>{L(!1,t)}))}));v.setEventListeners();const E=new class extends r{constructor(e){super({popupSelector:e}),this._image=this._popupElement.querySelector(".modal__img"),this._caption=this._popupElement.querySelector(".modal__caption")}open(e){let{link:t,name:r}=e;this._image.src=t,this._image.alt=r,this._caption.textContent=r,super.open()}}("#preview-image-modal");E.setEventListeners();const g=new class{constructor(e){let{profileName:t,jobElement:r,avatarImage:s}=e;this._profileName=document.querySelector(t),this._jobElement=document.querySelector(r),this._avatarImage=document.querySelector(s)}getUserInfo(){return{title:this._profileName.textContent,description:this._jobElement.textContent}}setUserInfo(e){this._profileName.textContent=e.name,this._jobElement.textContent=e.description}updateAvatarImage(e){e.avatar&&(this._avatarImage.src=e.avatar)}}({profileName:".profile__title",jobElement:".profile__description",avatarImage:".profile__image"}),S=new class extends r{constructor(e){super({popupSelector:e}),this._deleteCardModal=this._popupElement,this._formElement=this._deleteCardModal.querySelector(".modal__form")}setSubmitFunction(e){this._submitFunction=e}setEventListeners(){this._formElement.addEventListener("submit",(e=>{e.preventDefault(),this._submitFunction&&this._submitFunction()})),super.setEventListeners()}}("#delete-image-modal");S.setEventListeners();const y=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{method:"GET",headers:this._headers}).then((e=>this._checkResponse(e))).catch((e=>{console.error("Request failed:",e)}))}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers}).then((e=>this._checkResponse(e))).catch((e=>{console.error("Request failed:",e)}))}updateUserInfo(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then((e=>this._checkResponse(e))).catch((e=>{console.error("Request failed:",e),alert("Something went wrong. Please try again later.")}))}updateUserAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then((e=>this._checkResponse(e))).catch((e=>{console.error("Request failed:",e)}))}addCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then((e=>this._checkResponse(e))).catch((e=>{console.error("Request failed:",e)}))}handleDeleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>this._checkResponse(e))).catch((e=>{console.error("Request failed:",e)}))}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then((e=>this._checkResponse(e))).catch((e=>{console.error("Request failed:",e)}))}dislikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then((e=>this._checkResponse(e))).catch((e=>{console.error("Request failed:",e)}))}getUserInfoAndCards(){return Promise.all([this.getUserInfo(),this.getInitialCards()]).then((e=>{let[t,r]=e;return{userInfo:t,cards:r}})).catch((e=>{console.error("Request failed:",e),alert("Unable to load user data or cards. Please try again later.")}))}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"c801e776-9008-430b-a7ca-bcf7d2aaaf7f","Content-Type":"application/json"}});y.getUserInfoAndCards().then((e=>{let{userInfo:t,cards:r}=e;g.setUserInfo({name:t.name,description:t.about}),g.updateAvatarImage({avatar:t.avatar}),p.renderItems(r)})).catch((e=>{console.error("Failed to load user information or cards:",e)}));const b=document.querySelector(".profile__edit-avatar-button"),k=new s("#avatar-edit-modal",(function(e){const t=document.querySelector(".modal__button");L(!0,t),y.updateUserAvatar({avatar:e.avatar}).then((e=>{g.updateAvatarImage({avatar:e.avatar}),k.close()})).catch((e=>console.error("Error updating avatar:",e))).finally((()=>{L(!1,t)}))}));function L(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save";t.textContent=e?"Saving...":r}function q(t){return new e(t,_,w,((e,t)=>{!function(e,t){S.setSubmitFunction((()=>{y.handleDeleteCard(e).then((()=>{t._handleDeleteCard(),S.close()})).catch((e=>console.error("Error deleting card:",e)))})),S.open()}(e,t)}),((e,t)=>{!function(e){e._isLiked?y.dislikeCard(e._id).then((t=>{e.updateLike(!1)})).catch((e=>console.error("Error removing like from card:",e))):y.likeCard(e._id).then((t=>{console.log(t),e.updateLike(!0)})).catch((e=>console.error("Error adding like to card:",e)))}(e)})).getview()}k.setEventListeners(),b.addEventListener("click",(()=>{k.open()}));const C=new t(m,d),I=new t(m,u);function w(e){E.open(e)}C.enableValidation(),I.enableValidation(),o.addEventListener("click",(()=>{const e=g.getUserInfo();i.value=e.title,l.value=e.description,v.open()})),c.addEventListener("click",(()=>{f.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,